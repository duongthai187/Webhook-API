version: '3.8'

services:
  # Webhook API Service
  webhook-api:
    build: .
    container_name: webhook-api
    ports:
      - "8443:8443"
    environment:
      - HOST=0.0.0.0
      - PORT=8443
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=INFO
    volumes:
      - ./certs:/app/certs:ro
      - ./.env:/app/.env:ro
    networks:
      - webhook-network
    depends_on:
      - redis
      - loki
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.webhook-api.rule=Host(`webhook-api.local`)"
      - "traefik.http.routers.webhook-api.tls=true"
      - "traefik.http.services.webhook-api.loadbalancer.server.port=8443"
      - "traefik.http.services.webhook-api.loadbalancer.server.scheme=https"

  # Redis for Rate Limiting
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - webhook-network
    restart: unless-stopped
    command: redis-server --save 20 1 --loglevel warning

  # Redis Exporter for Prometheus
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    networks:
      - webhook-network
    depends_on:
      - redis
    restart: unless-stopped

  # Prometheus for Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./certs:/etc/ssl/certs:ro
      - ./certs:/etc/ssl/private:ro
      - prometheus-data:/prometheus
    networks:
      - webhook-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-clock-panel
    networks:
      - webhook-network
    depends_on:
      - prometheus
      - loki
    restart: unless-stopped

  # Loki for Logs
  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/loki-config.yml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - webhook-network
    restart: unless-stopped

  # Tempo for Tracing
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - "3200:3200"
      - "14268:14268"  # jaeger ingest
      - "9411:9411"    # zipkin
    volumes:
      - ./monitoring/tempo/tempo-config.yml:/etc/tempo.yaml:ro
      - tempo-data:/tmp/tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    networks:
      - webhook-network
    depends_on:
      - prometheus
    restart: unless-stopped

  # Node Exporter for System Metrics
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - webhook-network
    restart: unless-stopped

  # Promtail for Log Collection (optional)
  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./monitoring/promtail/promtail-config.yml:/etc/promtail/config.yml:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - webhook-network
    depends_on:
      - loki
    restart: unless-stopped

networks:
  webhook-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  loki-data:
    driver: local
  tempo-data:
    driver: local